{
  "_args": [
    [
      {
        "raw": "media-type@0.3.0",
        "scope": null,
        "escapedName": "media-type",
        "name": "media-type",
        "rawSpec": "0.3.0",
        "spec": "0.3.0",
        "type": "version"
      },
      "/Users/crazypanda/Desktop/fasdf/ampersandbuddy/node_modules/ampersand-sync"
    ]
  ],
  "_from": "media-type@0.3.0",
  "_id": "media-type@0.3.0",
  "_inCache": true,
  "_location": "/media-type",
  "_nodeVersion": "1.8.1",
  "_npmUser": {
    "name": "lovell",
    "email": "npm@lovell.info"
  },
  "_npmVersion": "2.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "media-type@0.3.0",
    "scope": null,
    "escapedName": "media-type",
    "name": "media-type",
    "rawSpec": "0.3.0",
    "spec": "0.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "/ampersand-sync"
  ],
  "_resolved": "https://registry.npmjs.org/media-type/-/media-type-0.3.0.tgz",
  "_shasum": "ceff6aa0e3f41a4a4de3d7d6b96eb82ac78d9ee8",
  "_shrinkwrap": null,
  "_spec": "media-type@0.3.0",
  "_where": "/Users/crazypanda/Desktop/fasdf/ampersandbuddy/node_modules/ampersand-sync",
  "author": {
    "name": "Lovell Fuller",
    "email": "npm@lovell.info"
  },
  "bugs": {
    "url": "https://github.com/lovell/media-type/issues"
  },
  "contributors": [
    {
      "name": "Doug Luce",
      "email": "aluce@adonnetwork.com",
      "url": "https://github.com/dougluce"
    }
  ],
  "dependencies": {},
  "description": "Parse and validate RFC6838 media types, anything from 'text/plain' to 'application/vnd.company.app.entity-v2+xml;charset=utf8'",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "ceff6aa0e3f41a4a4de3d7d6b96eb82ac78d9ee8",
    "tarball": "https://registry.npmjs.org/media-type/-/media-type-0.3.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "gitHead": "c30780a23fb2db07c938934ff19684ddd05070e2",
  "homepage": "https://github.com/lovell/media-type#readme",
  "keywords": [
    "media",
    "type",
    "mime",
    "content",
    "rfc6838",
    "parser",
    "validate",
    "hateoas",
    "vendor"
  ],
  "license": "Apache 2.0",
  "main": "./lib/mediaType",
  "maintainers": [
    {
      "name": "lovell",
      "email": "npm@lovell.info"
    }
  ],
  "name": "media-type",
  "optionalDependencies": {},
  "readme": "# media-type\n\nNode.js module to parse and validate\n[RFC6838](http://tools.ietf.org/html/rfc6838) media types.\n\nUseful for parsing `Content-Type` HTTP response headers\nfrom [HATEOAS](http://en.wikipedia.org/wiki/HATEOAS) constrained services.\n\nAware of vendor subtype trees, +suffixes, wildcards and semicolon delimited parameters.\n\n## Install\n\n    npm install media-type\n\n## Usage examples\n\n```javascript\nvar mediaType = require('media-type');\n```\n\n```javascript\nvar media = mediaType.fromString('text/plain');\nif (media.isValid()) {\n  console.log(media.type);        // 'text'\n  console.log(media.subtype);     // 'plain'\n  console.log(media.hasSuffix()); // false\n  console.log(media.asString());  // 'text/plain'\n  console.log(media);             // { type: 'text', subtype: 'plain', subtypeFacets: [ 'plain' ] ... }\n}\n```\n\n```javascript\nvar media = mediaType.fromString('application/vnd.company.app.entity-v2+xml; charset=utf8; BOM=true');\nif (media.isValid()) {\n  console.log(media.type);             // 'application'\n  console.log(media.subtype);          // 'vnd.company.app.entity-v2'\n  console.log(media.subtypeFacets);    // ['vnd', 'company', 'app', 'entity-v2']\n  console.log(media.hasSuffix());      // true\n  console.log(media.suffix);           // 'xml'\n  console.log(media.parameters);       // {charset: 'utf8', bom: 'true'}\n  console.log(media.isVendor());       // true\n  console.log(media.isPersonal());     // false\n  console.log(media.isExperimental()); // false\n  console.log(media.asString());       // 'application/vnd.company.app.entity-v2+xml;bom=true;charset=utf8'\n  console.log(media);                  // { type: 'application', subtype: 'vnd.company.app.entity-v2',\n                                       //   subtypeFacets: [ 'vnd', 'company', 'app', 'entity-v2' ],\n                                       //   suffix: 'xml', parameters: { charset: 'utf8', bom: 'true' } }\n}\n```\n\n## API\n\n### fromString(str)\n\nFactory method to construct an Object from a String representation of a media type.\n\n### isValid()\n\nIs this media type valid?\n\n### asString()\n\nReturn media type as a normalised String.\n\n### hasSuffix()\n\nDoes the media type have a suffix, e.g. the `xml` of `image/svg+xml`?\n\n### isVendor()\n\nDoes the media type have a vendor prefix, e.g. `text/vnd.DMClientScript`?\n\n### isPersonal()\n\nDoes the media type have a personal prefix, e.g. `text/prs.lines.tag`?\n\n### isExperimental()\n\nDoes the media type have an experimental prefix, e.g. `text/x-test`?\n\n## Test [![Build Status](https://travis-ci.org/lovell/media-type.png?branch=master)](https://travis-ci.org/lovell/media-type)\n\nRun the unit tests with:\n\n    npm test\n\n## Licence\n\nCopyright 2013, 2014, 2015 Lovell Fuller and contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0.html)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/lovell/media-type.git"
  },
  "scripts": {
    "test": "node test/unit"
  },
  "version": "0.3.0"
}
